Terminals which are not used

   UMINUS


State 38 conflicts: 1 shift/reduce
State 40 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: LPAREN expseq RPAREN
    3    | lvalue
    4    | NIL
    5    | INT
    6    | STRING
    7    | callexp
    8    | opexp
    9    | recordexp
   10    | assignexp
   11    | ifexp
   12    | whileexp
   13    | forexp
   14    | BREAK
   15    | letexp

   16 expseq: exp SEMICOLON expseq
   17       | exp

   18 explist: exp COMMA explist
   19        | exp

   20 lvalue: ID
   21       | fieldvar
   22       | subscriptvar

   23 fieldvar: lvalue DOT ID

   24 subscriptvar: lvalue LBRACK exp RBRACK

   25 callexp: ID LPAREN RPAREN
   26        | ID LPAREN explist RPAREN

   27 opexp: exp PLUS exp
   28      | exp MINUS exp
   29      | exp TIMES exp
   30      | exp DIVIDE exp
   31      | exp EQ exp
   32      | exp NEQ exp
   33      | exp LT exp
   34      | exp LE exp
   35      | exp GT exp
   36      | exp GE exp
   37      | exp AND exp
   38      | exp OR exp

   39 recordexp: ID LBRACE rec RBRACE
   40          | ID LBRACE RBRACE

   41 rec: rec_one COMMA rec
   42    | rec_one

   43 rec_one: ID EQ exp

   44 arrayexp: ID LBRACK exp RBRACK OF exp

   45 assignexp: lvalue ASSIGN exp
   46          | lvalue ASSIGN arrayexp

   47 ifexp: IF exp THEN exp ELSE exp
   48      | IF exp THEN exp

   49 whileexp: WHILE exp DO exp

   50 forexp: FOR ID ASSIGN exp TO exp DO exp

   51 letexp: LET decs IN expseq END

   52 decs: dec decs
   53     | /* empty */

   54 dec: vardec
   55    | fundecs
   56    | tydecs

   57 vardec: VAR ID ASSIGN exp
   58       | VAR ID COLON ID ASSIGN exp

   59 fundecs: fundec fundecs
   60        | fundec

   61 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   62       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   63 tydecs: tydec tydecs
   64       | tydec

   65 tydec: TYPE ID EQ ty

   66 ty: ID
   67   | LBRACE tyfields RBRACE
   68   | ARRAY OF ID

   69 tyfields: /* empty */
   70         | tyfields_nonempty

   71 tyfields_nonempty: field COMMA tyfields_nonempty
   72                  | field

   73 field: ID COLON ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 20 23 25 26 39 40 43 44 50 57 58 61 62 65 66 68 73
STRING (259) 6
INT (260) 5
COMMA (261) 18 41 71
COLON (262) 58 62 73
SEMICOLON (263) 16
LPAREN (264) 2 25 26 61 62
RPAREN (265) 2 25 26 61 62
LBRACK (266) 24 44
RBRACK (267) 24 44
LBRACE (268) 39 40 67
RBRACE (269) 39 40 67
DOT (270) 23
PLUS (271) 27
MINUS (272) 28
TIMES (273) 29
DIVIDE (274) 30
EQ (275) 31 43 61 62 65
NEQ (276) 32
LT (277) 33
LE (278) 34
GT (279) 35
GE (280) 36
AND (281) 37
OR (282) 38
ASSIGN (283) 45 46 50 57 58
ARRAY (284) 68
IF (285) 47 48
THEN (286) 47 48
ELSE (287) 47
WHILE (288) 49
FOR (289) 50
TO (290) 50
DO (291) 49 50
LET (292) 51
IN (293) 51
END (294) 51
OF (295) 44 68
BREAK (296) 14
NIL (297) 4
FUNCTION (298) 61 62
VAR (299) 57 58
TYPE (300) 65
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15, on right: 1 16 17 18
    19 24 27 28 29 30 31 32 33 34 35 36 37 38 43 44 45 47 48 49 50
    57 58 61 62
expseq (50)
    on left: 16 17, on right: 2 16 51
explist (51)
    on left: 18 19, on right: 18 26
lvalue (52)
    on left: 20 21 22, on right: 3 23 24 45 46
fieldvar (53)
    on left: 23, on right: 21
subscriptvar (54)
    on left: 24, on right: 22
callexp (55)
    on left: 25 26, on right: 7
opexp (56)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38, on right: 8
recordexp (57)
    on left: 39 40, on right: 9
rec (58)
    on left: 41 42, on right: 39 41
rec_one (59)
    on left: 43, on right: 41 42
arrayexp (60)
    on left: 44, on right: 46
assignexp (61)
    on left: 45 46, on right: 10
ifexp (62)
    on left: 47 48, on right: 11
whileexp (63)
    on left: 49, on right: 12
forexp (64)
    on left: 50, on right: 13
letexp (65)
    on left: 51, on right: 15
decs (66)
    on left: 52 53, on right: 51 52
dec (67)
    on left: 54 55 56, on right: 52
vardec (68)
    on left: 57 58, on right: 54
fundecs (69)
    on left: 59 60, on right: 55 59
fundec (70)
    on left: 61 62, on right: 59 60
tydecs (71)
    on left: 63 64, on right: 56 63
tydec (72)
    on left: 65, on right: 63 64
ty (73)
    on left: 66 67 68, on right: 65
tyfields (74)
    on left: 69 70, on right: 61 62 67
tyfields_nonempty (75)
    on left: 71 72, on right: 70 71
field (76)
    on left: 73, on right: 71 72


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    program       go to state 11
    exp           go to state 12
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 1

   20 lvalue: ID .
   25 callexp: ID . LPAREN RPAREN
   26        | ID . LPAREN explist RPAREN
   39 recordexp: ID . LBRACE rec RBRACE
   40          | ID . LBRACE RBRACE

    LPAREN  shift, and go to state 24
    LBRACE  shift, and go to state 25

    $default  reduce using rule 20 (lvalue)


state 2

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


state 3

    5 exp: INT .

    $default  reduce using rule 5 (exp)


state 4

    2 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 26
    expseq        go to state 27
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 5

   47 ifexp: IF . exp THEN exp ELSE exp
   48      | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 28
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 6

   49 whileexp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 29
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 7

   50 forexp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 30


state 8

   51 letexp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 31
    VAR       shift, and go to state 32
    TYPE      shift, and go to state 33

    $default  reduce using rule 53 (decs)

    decs     go to state 34
    dec      go to state 35
    vardec   go to state 36
    fundecs  go to state 37
    fundec   go to state 38
    tydecs   go to state 39
    tydec    go to state 40


state 9

   14 exp: BREAK .

    $default  reduce using rule 14 (exp)


state 10

    4 exp: NIL .

    $default  reduce using rule 4 (exp)


state 11

    0 $accept: program . $end

    $end  shift, and go to state 41


state 12

    1 program: exp .
   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 1 (program)


state 13

    3 exp: lvalue .
   23 fieldvar: lvalue . DOT ID
   24 subscriptvar: lvalue . LBRACK exp RBRACK
   45 assignexp: lvalue . ASSIGN exp
   46          | lvalue . ASSIGN arrayexp

    LBRACK  shift, and go to state 54
    DOT     shift, and go to state 55
    ASSIGN  shift, and go to state 56

    $default  reduce using rule 3 (exp)


state 14

   21 lvalue: fieldvar .

    $default  reduce using rule 21 (lvalue)


state 15

   22 lvalue: subscriptvar .

    $default  reduce using rule 22 (lvalue)


state 16

    7 exp: callexp .

    $default  reduce using rule 7 (exp)


state 17

    8 exp: opexp .

    $default  reduce using rule 8 (exp)


state 18

    9 exp: recordexp .

    $default  reduce using rule 9 (exp)


state 19

   10 exp: assignexp .

    $default  reduce using rule 10 (exp)


state 20

   11 exp: ifexp .

    $default  reduce using rule 11 (exp)


state 21

   12 exp: whileexp .

    $default  reduce using rule 12 (exp)


state 22

   13 exp: forexp .

    $default  reduce using rule 13 (exp)


state 23

   15 exp: letexp .

    $default  reduce using rule 15 (exp)


state 24

   25 callexp: ID LPAREN . RPAREN
   26        | ID LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 57
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 58
    explist       go to state 59
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 25

   39 recordexp: ID LBRACE . rec RBRACE
   40          | ID LBRACE . RBRACE

    ID      shift, and go to state 60
    RBRACE  shift, and go to state 61

    rec      go to state 62
    rec_one  go to state 63


state 26

   16 expseq: exp . SEMICOLON expseq
   17       | exp .
   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    SEMICOLON  shift, and go to state 64
    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    EQ         shift, and go to state 46
    NEQ        shift, and go to state 47
    LT         shift, and go to state 48
    LE         shift, and go to state 49
    GT         shift, and go to state 50
    GE         shift, and go to state 51
    AND        shift, and go to state 52
    OR         shift, and go to state 53

    $default  reduce using rule 17 (expseq)


state 27

    2 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 65


state 28

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   47 ifexp: IF exp . THEN exp ELSE exp
   48      | IF exp . THEN exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53
    THEN    shift, and go to state 66


state 29

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   49 whileexp: WHILE exp . DO exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53
    DO      shift, and go to state 67


state 30

   50 forexp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 68


state 31

   61 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   62       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 69


state 32

   57 vardec: VAR . ID ASSIGN exp
   58       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 70


state 33

   65 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 71


state 34

   51 letexp: LET decs . IN expseq END

    IN  shift, and go to state 72


state 35

   52 decs: dec . decs

    FUNCTION  shift, and go to state 31
    VAR       shift, and go to state 32
    TYPE      shift, and go to state 33

    $default  reduce using rule 53 (decs)

    decs     go to state 73
    dec      go to state 35
    vardec   go to state 36
    fundecs  go to state 37
    fundec   go to state 38
    tydecs   go to state 39
    tydec    go to state 40


state 36

   54 dec: vardec .

    $default  reduce using rule 54 (dec)


state 37

   55 dec: fundecs .

    $default  reduce using rule 55 (dec)


state 38

   59 fundecs: fundec . fundecs
   60        | fundec .

    FUNCTION  shift, and go to state 31

    FUNCTION  [reduce using rule 60 (fundecs)]
    $default  reduce using rule 60 (fundecs)

    fundecs  go to state 74
    fundec   go to state 38


state 39

   56 dec: tydecs .

    $default  reduce using rule 56 (dec)


state 40

   63 tydecs: tydec . tydecs
   64       | tydec .

    TYPE  shift, and go to state 33

    TYPE      [reduce using rule 64 (tydecs)]
    $default  reduce using rule 64 (tydecs)

    tydecs  go to state 75
    tydec   go to state 40


state 41

    0 $accept: program $end .

    $default  accept


state 42

   27 opexp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 76
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 43

   28 opexp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 77
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 44

   29 opexp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 78
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 45

   30 opexp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 79
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 46

   31 opexp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 80
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 47

   32 opexp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 81
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 48

   33 opexp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 82
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 49

   34 opexp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 83
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 50

   35 opexp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 84
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 51

   36 opexp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 85
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 52

   37 opexp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 86
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 53

   38 opexp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 87
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 54

   24 subscriptvar: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 88
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 55

   23 fieldvar: lvalue DOT . ID

    ID  shift, and go to state 89


state 56

   45 assignexp: lvalue ASSIGN . exp
   46          | lvalue ASSIGN . arrayexp

    ID      shift, and go to state 90
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 91
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    arrayexp      go to state 92
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 57

   25 callexp: ID LPAREN RPAREN .

    $default  reduce using rule 25 (callexp)


state 58

   18 explist: exp . COMMA explist
   19        | exp .
   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    COMMA   shift, and go to state 93
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 19 (explist)


state 59

   26 callexp: ID LPAREN explist . RPAREN

    RPAREN  shift, and go to state 94


state 60

   43 rec_one: ID . EQ exp

    EQ  shift, and go to state 95


state 61

   40 recordexp: ID LBRACE RBRACE .

    $default  reduce using rule 40 (recordexp)


state 62

   39 recordexp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 96


state 63

   41 rec: rec_one . COMMA rec
   42    | rec_one .

    COMMA  shift, and go to state 97

    $default  reduce using rule 42 (rec)


state 64

   16 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 26
    expseq        go to state 98
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 65

    2 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 2 (exp)


state 66

   47 ifexp: IF exp THEN . exp ELSE exp
   48      | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 99
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 67

   49 whileexp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 100
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 68

   50 forexp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 101
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 69

   61 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   62       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 102


state 70

   57 vardec: VAR ID . ASSIGN exp
   58       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 103
    ASSIGN  shift, and go to state 104


state 71

   65 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 105


state 72

   51 letexp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 26
    expseq        go to state 106
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 73

   52 decs: dec decs .

    $default  reduce using rule 52 (decs)


state 74

   59 fundecs: fundec fundecs .

    $default  reduce using rule 59 (fundecs)


state 75

   63 tydecs: tydec tydecs .

    $default  reduce using rule 63 (tydecs)


state 76

   27 opexp: exp . PLUS exp
   27      | exp PLUS exp .
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    $default  reduce using rule 27 (opexp)


state 77

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   28      | exp MINUS exp .
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    $default  reduce using rule 28 (opexp)


state 78

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   29      | exp TIMES exp .
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    $default  reduce using rule 29 (opexp)


state 79

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   30      | exp DIVIDE exp .
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    $default  reduce using rule 30 (opexp)


state 80

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   31      | exp EQ exp .
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 31 (opexp)


state 81

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   32      | exp NEQ exp .
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 32 (opexp)


state 82

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   33      | exp LT exp .
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 33 (opexp)


state 83

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   34      | exp LE exp .
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 34 (opexp)


state 84

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   35      | exp GT exp .
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (opexp)


state 85

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   36      | exp GE exp .
   37      | exp . AND exp
   38      | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 36 (opexp)


state 86

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   37      | exp AND exp .
   38      | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51

    $default  reduce using rule 37 (opexp)


state 87

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   38      | exp OR exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52

    $default  reduce using rule 38 (opexp)


state 88

   24 subscriptvar: lvalue LBRACK exp . RBRACK
   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp

    RBRACK  shift, and go to state 107
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53


state 89

   23 fieldvar: lvalue DOT ID .

    $default  reduce using rule 23 (fieldvar)


state 90

   20 lvalue: ID .
   25 callexp: ID . LPAREN RPAREN
   26        | ID . LPAREN explist RPAREN
   39 recordexp: ID . LBRACE rec RBRACE
   40          | ID . LBRACE RBRACE
   44 arrayexp: ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 24
    LBRACK  shift, and go to state 108
    LBRACE  shift, and go to state 25

    LBRACK    [reduce using rule 20 (lvalue)]
    $default  reduce using rule 20 (lvalue)


state 91

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   45 assignexp: lvalue ASSIGN exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 45 (assignexp)


state 92

   46 assignexp: lvalue ASSIGN arrayexp .

    $default  reduce using rule 46 (assignexp)


state 93

   18 explist: exp COMMA . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 58
    explist       go to state 109
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 94

   26 callexp: ID LPAREN explist RPAREN .

    $default  reduce using rule 26 (callexp)


state 95

   43 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 110
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 96

   39 recordexp: ID LBRACE rec RBRACE .

    $default  reduce using rule 39 (recordexp)


state 97

   41 rec: rec_one COMMA . rec

    ID  shift, and go to state 60

    rec      go to state 111
    rec_one  go to state 63


state 98

   16 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 16 (expseq)


state 99

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   47 ifexp: IF exp THEN exp . ELSE exp
   48      | IF exp THEN exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    ELSE  error (nonassociative)

    $default  reduce using rule 48 (ifexp)


state 100

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   49 whileexp: WHILE exp DO exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 49 (whileexp)


state 101

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   50 forexp: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53
    TO      shift, and go to state 113


state 102

   61 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   62       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 114

    $default  reduce using rule 69 (tyfields)

    tyfields           go to state 115
    tyfields_nonempty  go to state 116
    field              go to state 117


state 103

   58 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 118


state 104

   57 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 119
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 105

   65 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 120
    LBRACE  shift, and go to state 121
    ARRAY   shift, and go to state 122

    ty  go to state 123


state 106

   51 letexp: LET decs IN expseq . END

    END  shift, and go to state 124


state 107

   24 subscriptvar: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 24 (subscriptvar)


state 108

   44 arrayexp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 125
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 109

   18 explist: exp COMMA explist .

    $default  reduce using rule 18 (explist)


state 110

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   43 rec_one: ID EQ exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 43 (rec_one)


state 111

   41 rec: rec_one COMMA rec .

    $default  reduce using rule 41 (rec)


state 112

   47 ifexp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 126
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 113

   50 forexp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 127
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 114

   73 field: ID . COLON ID

    COLON  shift, and go to state 128


state 115

   61 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   62       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 129


state 116

   70 tyfields: tyfields_nonempty .

    $default  reduce using rule 70 (tyfields)


state 117

   71 tyfields_nonempty: field . COMMA tyfields_nonempty
   72                  | field .

    COMMA  shift, and go to state 130

    $default  reduce using rule 72 (tyfields_nonempty)


state 118

   58 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 131


state 119

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   57 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 57 (vardec)


state 120

   66 ty: ID .

    $default  reduce using rule 66 (ty)


state 121

   67 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 114

    $default  reduce using rule 69 (tyfields)

    tyfields           go to state 132
    tyfields_nonempty  go to state 116
    field              go to state 117


state 122

   68 ty: ARRAY . OF ID

    OF  shift, and go to state 133


state 123

   65 tydec: TYPE ID EQ ty .

    $default  reduce using rule 65 (tydec)


state 124

   51 letexp: LET decs IN expseq END .

    $default  reduce using rule 51 (letexp)


state 125

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   44 arrayexp: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 134
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53


state 126

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   47 ifexp: IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 47 (ifexp)


state 127

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   50 forexp: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53
    DO      shift, and go to state 135


state 128

   73 field: ID COLON . ID

    ID  shift, and go to state 136


state 129

   61 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   62       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 137
    EQ     shift, and go to state 138


state 130

   71 tyfields_nonempty: field COMMA . tyfields_nonempty

    ID  shift, and go to state 114

    tyfields_nonempty  go to state 139
    field              go to state 117


state 131

   58 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 140
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 132

   67 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 141


state 133

   68 ty: ARRAY OF . ID

    ID  shift, and go to state 142


state 134

   44 arrayexp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 143


state 135

   50 forexp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 144
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 136

   73 field: ID COLON ID .

    $default  reduce using rule 73 (field)


state 137

   62 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 145


state 138

   61 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 146
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 139

   71 tyfields_nonempty: field COMMA tyfields_nonempty .

    $default  reduce using rule 71 (tyfields_nonempty)


state 140

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   58 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 58 (vardec)


state 141

   67 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 67 (ty)


state 142

   68 ty: ARRAY OF ID .

    $default  reduce using rule 68 (ty)


state 143

   44 arrayexp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 147
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 144

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   50 forexp: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 50 (forexp)


state 145

   62 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 148


state 146

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   61 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 61 (fundec)


state 147

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   44 arrayexp: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 44 (arrayexp)


state 148

   62 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10

    exp           go to state 149
    lvalue        go to state 13
    fieldvar      go to state 14
    subscriptvar  go to state 15
    callexp       go to state 16
    opexp         go to state 17
    recordexp     go to state 18
    assignexp     go to state 19
    ifexp         go to state 20
    whileexp      go to state 21
    forexp        go to state 22
    letexp        go to state 23


state 149

   27 opexp: exp . PLUS exp
   28      | exp . MINUS exp
   29      | exp . TIMES exp
   30      | exp . DIVIDE exp
   31      | exp . EQ exp
   32      | exp . NEQ exp
   33      | exp . LT exp
   34      | exp . LE exp
   35      | exp . GT exp
   36      | exp . GE exp
   37      | exp . AND exp
   38      | exp . OR exp
   62 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 62 (fundec)
